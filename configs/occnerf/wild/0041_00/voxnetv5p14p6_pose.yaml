task: 'wild'
subject: '0041_00'
experiment: 'voxnetv5p14p6_pose'

network_module: 'core.nets.human_nerf.voxnetv5p14p6'

root_path: '/vision/u/xtiange/human/nerf/humannerf'



canonical_mlp:
  module: 'core.nets.human_nerf.canonical_mlps.voxnetv5p14p6'
  mlp_depth: 4        # layers in network
  mlp_width: 256       # channels per layer
  multires: 10         # log2 of max freq for positional encoding (3D location)
  i_embed: 0           # set 0 for default positional encoding, -1 for none

##############################################3
## Network Specs

# pose decoder
pose_decoder:
  kick_in_iter: 10000

##############################################3
## Data Configuration

train:
  dataset_module: 'core.data.human_nerf.train'
  dataset: 'monocular_train'
  lossweights:
    lpips: 1.0
    mse: 0.2
  
progress:
  dataset_module: 'core.data.human_nerf.train'
  dataset: 'monocular_test'
  dump_interval: 1000

movement:
  dataset_module: 'core.data.human_nerf.train'
  dataset: 'monocular_test'

freeview:
  dataset_module: 'core.data.human_nerf.freeview'
  dataset: 'monocular_test'

allview:
  dataset_module: 'core.data.human_nerf.allview'
  dataset: 'monocular_test'

tpose:
  dataset_module: 'core.data.human_nerf.tpose'
  dataset: 'monocular_test'

backview:
  dataset_module: 'core.data.human_nerf.backview'
  dataset: 'monocular_test'


bgcolor: [255., 255., 255.]
resize_img_scale: 0.25

bbox_offset: 2.0 # 0.15 for training

# N_samples: 128      # number of samples for each ray in coarse ray matching
# netchunk_per_gpu: 100000 # number of pts sent through network in parallel, decrease if running out of memory
# chunk: 8192   # 32768=1024*32, number of rays processed in parallel, decrease if running out of memory


# reduce the size of patch from 32x32 to 20x20 to fit in a single gpu
patch:
  size: 32      # [Patch] size of patch
